from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from create_bot import admins
from utils import status_mapping


def start_kb(user_telegram_id: int):
    inline_kb_list = [
        [InlineKeyboardButton(text="üìù –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="new_search")],
        [InlineKeyboardButton(text="üìö –õ–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è", callback_data='waiting_list')]
    ]
    if user_telegram_id in admins:
        inline_kb_list.append([InlineKeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data='administration')])
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def go_home_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='go_home')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def back_home_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_home')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def search_details_kb(request_id, status="active"):
    inline_kb_list = [
        [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f'delete_{request_id}')]
    ]

    if status != "active":
        inline_kb_list.append([InlineKeyboardButton(text="üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", callback_data=f'restart_{request_id}')])

    inline_kb_list.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='waiting_list')])

    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def search_details_back_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='waiting_list')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def waiting_list_kb(requests=[]):
    inline_kb_list = [
        [InlineKeyboardButton(
            text=f"{request['station_from']} - {request['station_to']} ({request['date']}) - {request['train_data']['train_number']} - {status_mapping.get(request['status'])}",
            callback_data=f'request_{request["_id"]}')] for request in requests
    ]
    inline_kb_list.append([InlineKeyboardButton(text="–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='go_home')])
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def validate_train_kb(filter_exists=False):
    inline_kb_list = [
        [InlineKeyboardButton(text="üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", callback_data='start_search')]
    ]

    if not filter_exists:
        inline_kb_list.append([InlineKeyboardButton(text="üíµ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏", callback_data='price_filter')]),
    else:
        inline_kb_list.append([InlineKeyboardButton(text="üíµ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏", callback_data='price_filter')]),

    inline_kb_list.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data='go_home')])

    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def price_filter_back_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_validate_search')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def administration_kb(debug_mode=False):
    inline_kb_list = [
    ]

    if not debug_mode:
        inline_kb_list.append([InlineKeyboardButton(text="‚öôÔ∏è –í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏", callback_data=f'debug_mode_on')])
    else:
        inline_kb_list.append(
            [InlineKeyboardButton(text="‚öôÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏", callback_data=f'debug_mode_off')])

    # inline_kb_list.append([InlineKeyboardButton(text="‚è≥ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–∏—Å–∫–∞", callback_data=f'search_interval')])
    inline_kb_list.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_home')])

    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)
