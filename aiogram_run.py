import asyncio
from create_bot import bot, dp, scheduler, admins
from handlers.administration import admin_router
from handlers.error import error_router
from handlers.list import list_router
from handlers.start import start_router
from handlers.search import search_router
from aiogram.types import BotCommand, BotCommandScopeDefault, ErrorEvent

from utils.update_queue import update_queue


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–µ –º–µ–Ω—é (–¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
async def set_commands():
    commands = [BotCommand(command='start', description='–°—Ç–∞—Ä—Ç')]
    await bot.set_my_commands(commands, BotCommandScopeDefault())


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
async def start_bot():
    await set_commands()
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, f'–Ø –∑–∞–ø—É—â–µ–Ω ü•≥')
    except:
        pass


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
async def stop_bot():
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    except:
        pass


@dp.errors()
async def errors_handler(event: ErrorEvent):
    if event.update.callback_query:
        await event.update.callback_query.answer(text="–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    print(f"Error caught: {event.exception} while processing {event.update}")
    print(event.exception)
    # logger.error("Error caught: %r while processing %r", event.exception, event.update)


async def main():
    scheduler.add_job(update_queue, 'interval', seconds=60)
    scheduler.start()
    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(start_router)
    dp.include_router(search_router)
    dp.include_router(list_router)
    dp.include_router(admin_router)
    dp.include_router(error_router)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)

    # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ long polling –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç –æ—á–∏—â–∞–µ—Ç –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∑–∞ –µ–≥–æ –º–æ–º–µ–Ω—Ç—ã –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
